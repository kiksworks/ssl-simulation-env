name: CI
on:
  push:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: kiksworks/ssl-simulation-env

    steps:
      - uses: actions/checkout@main
        with:
          submodules: true

      - name: Install ImageMagick
        run: |
          sudo apt-get update
          sudo apt-get install -y imagemagick

      - name: Generate awesome wallpaper
        working-directory: /tmp
        run: |
          curl -L http://www.ee.toyota-ct.ac.jp/~sugi/NITkikslogo+v2.png -o logo.png
          sha256sum -c - <<< "b173a6dfad2f2cd467cbbea0489e6ee7f8917aca3749ff7038ccd6060c14d179 logo.png"
          convert logo.png -resize 1024x -background white -alpha remove -alpha off wallpaper.png

      - name: Patch base Dockerfile and other files
        run: |
          sed -i 's/\(^DesktopBackgroundImage\).*/\1 = "~\/.icewm\/wallpaper.png"/; /^DesktopBackgroundScaled/d' \
            third_party/ssl-simulation-setup/src/ubuntu-vnc/.icewm/preferences
          echo 'DesktopBackgroundColor = white' >> \
            third_party/ssl-simulation-setup/src/ubuntu-vnc/.icewm/preferences
          echo 'DesktopBackgroundCenter = 1' >> \
            third_party/ssl-simulation-setup/src/ubuntu-vnc/.icewm/preferences
          cp /tmp/wallpaper.png third_party/ssl-simulation-setup/src/ubuntu-vnc/.icewm/
          rm third_party/ssl-simulation-setup/src/ubuntu-vnc/.icewm/wallpaper.jpg

      - name: Build robocupssl/ubuntu-vnc
        run: docker build --pull -t ubuntu-vnc third_party/ssl-simulation-setup/src/ubuntu-vnc

      - name: Build kiksworks/ssl-simulation-env
        env:
          DOCKER_BUILDKIT: "1"
        run: docker build -t $IMAGE_NAME .

      - name: Push container images
        env:
          REGISTRY: ghcr.io
          USERNAME: ${{ github.actor }}
          PASSWORD: ${{ secrets.GITHUB_TOKEN }}
        run: |
          docker login "$REGISTRY" -u "$USERNAME" --password-stdin <<< "$PASSWORD"

          tag="${GITHUB_REF#refs/heads/}"
          docker tag "$IMAGE_NAME" "$REGISTRY/$IMAGE_NAME:$tag"
          docker push "$REGISTRY/$IMAGE_NAME:$tag"

          if [[ "$tag" = "main" ]]; then
            docker tag "$IMAGE_NAME" "$REGISTRY/$IMAGE_NAME:latest"
            docker push "$REGISTRY/$IMAGE_NAME:latest"
          fi

          rm -rf ~/.docker
